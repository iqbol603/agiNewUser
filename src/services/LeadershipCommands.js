import { log } from '../utils/logger.js';

export class LeadershipCommands {
  constructor(decisionEngine, toolRouter) {
    this.decisionEngine = decisionEngine;
    this.toolRouter = toolRouter;
  }

  /**
   * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
   */
  async analyzeTeam() {
    try {
      const analysis = await this.decisionEngine.analyzeTeamAndMakeDecisions();
      
      let report = 'üìä –ê–ù–ê–õ–ò–ó –ö–û–ú–ê–ù–î–´ - –†–£–ö–û–í–û–î–ò–¢–ï–õ–¨–°–ö–ò–ô –û–¢–ß–ï–¢\n\n';
      
      // –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã
      report += 'üë• –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ –ö–û–ú–ê–ù–î–´:\n';
      for (const [empId, perf] of Object.entries(analysis.teamPerformance)) {
        const status = perf.performance >= 80 ? 'üü¢' : perf.performance >= 60 ? 'üü°' : 'üî¥';
        report += `${status} ${perf.name}: ${perf.performance}% (${perf.completedTasks}/${perf.totalTasks} –∑–∞–¥–∞—á)\n`;
        if (perf.recommendations.length > 0) {
          report += `   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: ${perf.recommendations.join(', ')}\n`;
        }
      }
      
      report += '\n‚öñÔ∏è –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ù–ê–ì–†–£–ó–ö–ò:\n';
      for (const [empId, workload] of Object.entries(analysis.workloadDistribution)) {
        const level = workload.workloadLevel === 'critical' ? 'üî¥' : 
                     workload.workloadLevel === 'high' ? 'üü†' : 
                     workload.workloadLevel === 'medium' ? 'üü°' : 'üü¢';
        report += `${level} ${workload.name}: ${workload.activeTasks} –∞–∫—Ç–∏–≤–Ω—ã—Ö, ${workload.urgentTasks} —Å—Ä–æ—á–Ω—ã—Ö\n`;
        if (workload.recommendations.length > 0) {
          report += `   üí° ${workload.recommendations.join(', ')}\n`;
        }
      }
      
      // –†–µ—à–µ–Ω–∏—è –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º
      if (analysis.priorityDecisions.length > 0) {
        report += '\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ü–†–ò–û–†–ò–¢–ï–¢–ê–ú:\n';
        for (const decision of analysis.priorityDecisions.slice(0, 5)) {
          report += `‚Ä¢ #${decision.taskId} "${decision.taskTitle}"\n`;
          report += `  ${decision.currentPriority} ‚Üí ${decision.recommendedPriority}\n`;
          report += `  üí≠ ${decision.reasoning}\n`;
          report += `  ‚ö° ${decision.action}\n\n`;
        }
      }
      
      // –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
      if (analysis.strategicRecommendations.length > 0) {
        report += '\nüöÄ –°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:\n';
        for (const rec of analysis.strategicRecommendations) {
          const icon = rec.type === 'warning' ? '‚ö†Ô∏è' : rec.type === 'improvement' ? 'üìà' : 'üí°';
          report += `${icon} ${rec.title}\n`;
          report += `   ${rec.description}\n`;
          report += `   üéØ ${rec.action}\n\n`;
        }
      }
      
      return report;
    } catch (error) {
      log.error('[LeadershipCommands] –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–º–∞–Ω–¥—ã:', error.message);
      return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç
   */
  async generateStrategicReport() {
    try {
      const analysis = await this.decisionEngine.analyzeTeamAndMakeDecisions();
      
      let report = 'üéØ –°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ò–ô –û–¢–ß–ï–¢ –†–£–ö–û–í–û–î–ò–¢–ï–õ–Ø\n\n';
      
      // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
      const totalEmployees = Object.keys(analysis.teamPerformance).length;
      const avgPerformance = Object.values(analysis.teamPerformance)
        .reduce((sum, perf) => sum + perf.performance, 0) / totalEmployees;
      
      report += `üìà –û–ë–©–ò–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:\n`;
      report += `‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: ${totalEmployees} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n`;
      report += `‚Ä¢ –°—Ä–µ–¥–Ω—è—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${avgPerformance.toFixed(1)}%\n`;
      report += `‚Ä¢ –ü–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö: ${analysis.workloadDistribution.overworked?.length || 0}\n`;
      report += `‚Ä¢ –ù–µ–¥–æ–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö: ${analysis.workloadDistribution.underutilized?.length || 0}\n\n`;
      
      // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è
      const criticalDecisions = analysis.priorityDecisions.filter(d => 
        d.recommendedPriority === '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'
      );
      
      if (criticalDecisions.length > 0) {
        report += `üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ó–ê–î–ê–ß–ò (${criticalDecisions.length}):\n`;
        for (const decision of criticalDecisions.slice(0, 3)) {
          report += `‚Ä¢ #${decision.taskId}: ${decision.taskTitle}\n`;
        }
        report += '\n';
      }
      
      // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ—Å—É—Ä—Å–∞–º
      if (analysis.resourceAllocation.recommendations.length > 0) {
        report += `üíº –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –†–ï–°–£–†–°–ê–ú:\n`;
        for (const rec of analysis.resourceAllocation.recommendations) {
          report += `‚Ä¢ ${rec}\n`;
        }
        report += '\n';
      }
      
      // –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
      if (analysis.strategicRecommendations.length > 0) {
        report += `üéØ –°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ò–ï –î–ï–ô–°–¢–í–ò–Ø:\n`;
        for (const rec of analysis.strategicRecommendations) {
          report += `‚Ä¢ ${rec.action}\n`;
        }
      }
      
      return report;
    } catch (error) {
      log.error('[LeadershipCommands] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞:', error.message);
      return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞.';
    }
  }

  /**
   * –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
   */
  async suggestImprovements() {
    try {
      const analysis = await this.decisionEngine.analyzeTeamAndMakeDecisions();
      
      let suggestions = 'üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ –ö–û–ú–ê–ù–î–´\n\n';
      
      // –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–æ–Ω
      const lowPerformers = Object.entries(analysis.teamPerformance)
        .filter(([id, perf]) => perf.performance < 60)
        .map(([id, perf]) => perf);
      
      if (lowPerformers.length > 0) {
        suggestions += 'üî¥ –¢–†–ï–ë–£–Æ–¢ –í–ù–ò–ú–ê–ù–ò–Ø:\n';
        for (const perf of lowPerformers) {
          suggestions += `‚Ä¢ ${perf.name} (${perf.performance}% –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)\n`;
          suggestions += `  - ${perf.recommendations.join(', ')}\n`;
        }
        suggestions += '\n';
      }
      
      // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      const overworked = analysis.workloadDistribution.overworked || [];
      const underutilized = analysis.workloadDistribution.underutilized || [];
      
      if (overworked.length > 0 && underutilized.length > 0) {
        suggestions += '‚öñÔ∏è –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ù–ê–ì–†–£–ó–ö–ò:\n';
        suggestions += `‚Ä¢ –ü–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–¥–∞—á–∏ –æ—Ç ${overworked[0].employee} –∫ ${underutilized[0].employee}\n`;
        suggestions += `‚Ä¢ –≠—Ç–æ —É–ª—É—á—à–∏—Ç –±–∞–ª–∞–Ω—Å –∫–æ–º–∞–Ω–¥—ã\n\n`;
      }
      
      // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Ü–µ—Å—Å–∞–º
      suggestions += 'üîÑ –£–õ–£–ß–®–ï–ù–ò–ï –ü–†–û–¶–ï–°–°–û–í:\n';
      suggestions += '‚Ä¢ –í–Ω–µ–¥—Ä–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Å—Ç–µ–Ω–¥–∞–ø—ã –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n';
      suggestions += '‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ç–∫–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á\n';
      suggestions += '‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —Ä–∞–Ω–Ω–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ —Ä–∏—Å–∫–∞—Ö\n';
      suggestions += '‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤—ã –∫–æ–º–∞–Ω–¥—ã\n';
      
      return suggestions;
    } catch (error) {
      log.error('[LeadershipCommands] –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', error.message);
      return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.';
    }
  }

  /**
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ä–µ—à–µ–Ω–∏—è –ø–æ –∑–∞–¥–∞—á–∞–º
   */
  async autoDecideOnTasks() {
    try {
      const analysis = await this.decisionEngine.analyzeTeamAndMakeDecisions();
      const decisions = analysis.priorityDecisions;
      
      let report = 'ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –†–ï–®–ï–ù–ò–Ø –†–£–ö–û–í–û–î–ò–¢–ï–õ–Ø\n\n';
      
      if (decisions.length === 0) {
        report += '‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã. –î–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.\n';
        return report;
      }
      
      report += `üìã –ù–ê–ô–î–ï–ù–û ${decisions.length} –ó–ê–î–ê–ß –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø:\n\n`;
      
      for (const decision of decisions.slice(0, 10)) {
        report += `üéØ –ó–∞–¥–∞—á–∞ #${decision.taskId}: "${decision.taskTitle}"\n`;
        report += `   –¢–µ–∫—É—â–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${decision.currentPriority}\n`;
        report += `   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π: ${decision.recommendedPriority}\n`;
        report += `   –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: ${decision.reasoning}\n`;
        report += `   –î–µ–π—Å—Ç–≤–∏–µ: ${decision.action}\n\n`;
      }
      
      if (decisions.length > 10) {
        report += `... –∏ –µ—â–µ ${decisions.length - 10} –∑–∞–¥–∞—á\n`;
      }
      
      report += 'üí° –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /apply_decisions\n';
      
      return report;
    } catch (error) {
      log.error('[LeadershipCommands] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π:', error.message);
      return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—à–µ–Ω–∏–π.';
    }
  }
}


#!/usr/bin/env node

import { deadlineValidator } from './src/services/DeadlineValidator.js';
import { BonusPenaltyService } from './src/services/BonusPenaltyService.js';
import { log } from './src/utils/logger.js';

async function testNewFeatures() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô\n');

  // –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–µ–¥–ª–∞–π–Ω–æ–≤
  console.log('üìÖ –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–µ–¥–ª–∞–π–Ω–æ–≤');
  
  const testCases = [
    {
      name: '–ö–æ—Ä–æ—Ç–∫–∏–π –¥–µ–¥–ª–∞–π–Ω',
      task: '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å —Å–ª–æ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É',
      description: '–ü–æ–ª–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å –Ω—É–ª—è',
      priority: '–í—ã—Å–æ–∫–∏–π',
      deadline: new Date(Date.now() + 2 * 60 * 60 * 1000), // 2 —á–∞—Å–∞
      expected: 'should warn about short deadline'
    },
    {
      name: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –¥–µ–¥–ª–∞–π–Ω',
      task: '–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥',
      description: '–ù–µ–±–æ–ª—å—à–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
      priority: '–°—Ä–µ–¥–Ω–∏–π',
      deadline: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // 2 –¥–Ω—è
      expected: 'should be valid'
    },
    {
      name: '–î–µ–¥–ª–∞–π–Ω –≤ –ø—Ä–æ—à–ª–æ–º',
      task: '–û–±—ã—á–Ω–∞—è –∑–∞–¥–∞—á–∞',
      description: '–û–ø–∏—Å–∞–Ω–∏–µ',
      priority: '–ù–∏–∑–∫–∏–π',
      deadline: new Date(Date.now() - 24 * 60 * 60 * 1000), // –≤—á–µ—Ä–∞
      expected: 'should be invalid'
    },
    {
      name: '–î–µ–¥–ª–∞–π–Ω –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ',
      task: '–û–±—ã—á–Ω–∞—è –∑–∞–¥–∞—á–∞',
      description: '–û–ø–∏—Å–∞–Ω–∏–µ',
      priority: '–°—Ä–µ–¥–Ω–∏–π',
      deadline: new Date('2024-09-14'), // —Å—É–±–±–æ—Ç–∞
      expected: 'should warn about weekend'
    }
  ];

  for (const testCase of testCases) {
    console.log(`\n   –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${testCase.name}`);
    const result = deadlineValidator.validateDeadline(
      testCase.task,
      testCase.description,
      testCase.priority,
      testCase.deadline,
      '1'
    );
    
    console.log(`   ‚úÖ –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${result.complexity}`);
    console.log(`   ‚úÖ –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å: ${result.isValid ? '–î–ê' : '–ù–ï–¢'}`);
    
    if (result.errors.length > 0) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∏: ${result.errors.join(', ')}`);
    }
    
    if (result.warnings.length > 0) {
      console.log(`   ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${result.warnings.join(', ')}`);
    }
    
    if (result.suggestedDeadline) {
      console.log(`   üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –¥–µ–¥–ª–∞–π–Ω: ${result.suggestedDeadline.toLocaleString('ru-RU')}`);
    }
  }

  // –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á
  console.log('\n\nüîç –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á');
  
  const complexityTests = [
    {
      task: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥',
      description: '–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞',
      priority: '–ù–∏–∑–∫–∏–π',
      expected: 'low'
    },
    {
      task: '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é',
      description: '–ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º —Å–µ—Ä–≤–∏—Å–æ–º, –≤–∫–ª—é—á–∞—è –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ',
      priority: '–í—ã—Å–æ–∫–∏–π',
      expected: 'high'
    },
    {
      task: '–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥ –≤ —Å–∏—Å—Ç–µ–º–µ',
      description: '–ù–∞–π—Ç–∏ –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –≤ –º–æ–¥—É–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
      priority: '–°—Ä–µ–¥–Ω–∏–π',
      expected: 'medium'
    }
  ];

  for (const test of complexityTests) {
    const result = deadlineValidator.validateDeadline(
      test.task,
      test.description,
      test.priority,
      new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é
      '1'
    );
    
    console.log(`\n   –ó–∞–¥–∞—á–∞: "${test.task}"`);
    console.log(`   –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${result.complexity} (–æ–∂–∏–¥–∞–ª–æ—Å—å: ${test.expected})`);
    console.log(`   –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –≤—Ä–µ–º—è: ${deadlineValidator.formatTime(deadlineValidator.calculateRecommendedTime(result.complexity, test.task, test.description))}`);
  }

  // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö
  console.log('\n\nüìÖ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö');
  
  const weekendTests = [
    new Date('2024-09-14'), // —Å—É–±–±–æ—Ç–∞
    new Date('2024-09-15'), // –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
    new Date('2024-09-16'), // –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
    new Date('2024-09-17'), // –≤—Ç–æ—Ä–Ω–∏–∫
  ];

  for (const date of weekendTests) {
    const warning = deadlineValidator.checkWeekends(date);
    const dayName = date.toLocaleDateString('ru-RU', { weekday: 'long' });
    console.log(`   ${dayName} (${date.toLocaleDateString('ru-RU')}): ${warning || '‚úÖ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å'}`);
  }

  // –¢–µ—Å—Ç 4: –°–∏—Å—Ç–µ–º–∞ –±–æ–Ω—É—Å–æ–≤ (–º–æ–∫-—Ç–µ—Å—Ç)
  console.log('\n\nüí∞ –¢–µ—Å—Ç 4: –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–æ–Ω—É—Å–æ–≤');
  
  try {
    const bonusService = new BonusPenaltyService({ 
      toolRouter: null, 
      notifier: null 
    });
    
    console.log('   ‚úÖ –°–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –±–æ–Ω—É—Å–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    console.log('   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤');
    console.log('   ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –ø—Ä–∏ 3+ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤ –º–µ—Å—è—Ü');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const mockStats = await bonusService.getEmployeeExplanationStats(1, 0);
    console.log(`   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö: ${JSON.stringify(mockStats)}`);
    
  } catch (error) {
    console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: ${error.message}`);
  }

  console.log('\n\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô –ó–ê–í–ï–†–®–ï–ù–û!');
  
  console.log('\nüìã –°–í–û–î–ö–ê –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô:');
  console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–µ–¥–ª–∞–π–Ω–æ–≤ - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç—å —Å—Ä–æ–∫–æ–≤');
  console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å');
  console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ');
  console.log('‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ–Ω—É—Å–æ–≤ - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç 3+ –æ–±—ä—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤ –º–µ—Å—è—Ü');
  console.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ /penalty_bonus - –¥–ª—è –ª–∏—à–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤');
  console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—É');
  
  console.log('\nüöÄ –í–°–ï –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testNewFeatures().catch(console.error);
